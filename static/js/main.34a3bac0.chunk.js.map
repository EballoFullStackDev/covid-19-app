{"version":3,"sources":["VirusDataTableRow.component.jsx","CountryDetails.component.jsx","VirusDataTableArea.component.jsx","App.js","index.js"],"names":["VirusDataTableRow","rowData","handleOpenModal","onClick","CountryDetails","modalInfo","handleCloseModal","console","log","name","className","infected","deaths","recovered","newlyInfected","newDeaths","VirusDataTableAreacomponent","props","key","prevData","state","previousDayData","filter","country","toLowerCase","includes","setState","showModal","fetchData","date","moment","Date","subtract","address","readRemoteFile","format","complete","results","updateData","addStatistics","filteredResults","result","Number","isPreviousDayStatistics","push","data","forEach","countryName","length","sort","a","b","filteredData","inputHandler","evt","searchData","e","target","value","input","isOpen","this","contentLabel","onRequestClose","shouldCloseOnOverlayClick","ariaHideApp","type","onChange","placeholder","map","row","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34a3bac0.chunk.js","sourcesContent":["import React from 'react';\n\nconst VirusDataTableRow = ({rowData, handleOpenModal}) => {\n  return ( \n    <tr onClick={() => handleOpenModal()}>\n      <td>\n        {rowData[1]}\n      </td>\n      <td>\n        {rowData[3]}\n      </td>\n      <td>\n        {rowData[4]}\n      </td>\n      <td>\n        {rowData[5]}\n      </td>\n    </tr>\n   );\n}\n \nexport default VirusDataTableRow;","import React from 'react'\n\nconst CountryDetails = ({modalInfo, handleCloseModal}) => {\n  console.log(modalInfo)\n  return ( \n  <div>\n    <h1>{modalInfo.name}</h1>\n    <p className='modalInfo'>Confirmed: {modalInfo.infected}</p>\n    <p className='modalInfo'>Deaths: {modalInfo.deaths}</p>\n    <p className='modalInfo'>Recovered: {modalInfo.recovered}</p>\n    <p className='modalInfo'>Newly Infected: {modalInfo.newlyInfected}</p>\n    <p className='modalInfo'>New Deaths: {modalInfo.newDeaths}</p>\n    <button onClick={() => handleCloseModal()}>Close</button>\n    </div>\n   );\n}\n \nexport default CountryDetails;","import React, { Component } from 'react';\nimport moment from 'moment';\nimport { readRemoteFile } from 'react-papaparse';\nimport VirusDataTableRow from './VirusDataTableRow.component';\nimport Modal from 'react-modal';\nimport CountryDetails from './CountryDetails.component';\n\n\nexport class VirusDataTableAreacomponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [], //array of yesterday's data\n      filteredData: [], //this allows to filter \n      previousDayData: [], //array of data two days ago\n      showModal: false,\n      input: '',\n      modalInfo: {}\n    }\n    this.fetchData();\n  }\n\n  handleOpenModal = key => {\n    const { previousDayData } = this.state;\n    const prevData = previousDayData.filter(country => country[1].toLowerCase().includes(key[1].toLowerCase()));\n    this.setState({\n      modalInfo: {\n        name: key[1],\n        infected: key[3],\n        deaths: key[4],\n        recovered: key[5],\n        newlyInfected: key[3] - prevData[0][3],\n        newDeaths: key[4] - prevData[0][4]\n      },\n      showModal: true\n    })\n  }\n\n  handleCloseModal = key => {\n    this.setState({\n      showModal: false\n    })\n  }\n\n  fetchData = () => {\n    let date = moment(new Date()).subtract(1, \"days\");\n    let address = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/';\n    readRemoteFile(address + moment(date).format(\"MM-DD-YYYY\") + \".csv\", {\n      complete: (results) => this.updateData(results, false) // set to true for gett previousDayData set\n    });\n    readRemoteFile(address + moment(date.subtract(1,\"days\")).format(\"MM-DD-YYYY\") + \".csv\", {\n      complete: (results) => this.updateData(results, true) // set to true for gett previousDayData set\n    });\n  }\n\n  addStatistics = (filteredResults, result) => {\n    filteredResults[3] = filteredResults[3] + Number(result[3]);\n    filteredResults[4] = filteredResults[4] + Number(result[4]);\n    filteredResults[5] = filteredResults[5] + Number(result[5]);\n    return filteredResults;\n  }\n\n  updateData = (results, isPreviousDayStatistics) => {\n    // console.log(results)\n    let filteredResults = [];\n    filteredResults.push([\"\", \"Canada\", \"\", 0, 0, 0, \"\", \"\"]);\n    filteredResults.push([\"\", \"US\", \"\", 0, 0, 0, \"\", \"\"]);\n    filteredResults.push([\"\", \"China\", \"\", 0, 0, 0, \"\", \"\"]);\n    filteredResults.push([\"\", \"Australia\", \"\", 0, 0, 0, \"\", \"\"]);\n    results.data.forEach(result => {\n      let countryName = result[1];\n      if (countryName === \"China\") {\n        filteredResults[2] = this.addStatistics(filteredResults[2], result);\n      } else if (countryName === \"US\") {\n        filteredResults[1] = this.addStatistics(filteredResults[1], result);\n      } else if (countryName === \"Canada\") {\n        filteredResults[0] = this.addStatistics(filteredResults[0], result);\n      } else if (countryName === \"Australia\") {\n        filteredResults[3] = this.addStatistics(filteredResults[3], result);\n      } else {\n        if (result.length !== 1 && countryName !== \"Country/Region\") {\n          filteredResults.push(result);\n        }\n      }\n    });\n    filteredResults.sort((a, b) => b[3] - a[3]);\n    if (!isPreviousDayStatistics) {\n      this.setState({\n        data: filteredResults,\n        filteredData: filteredResults\n      })\n    } else {\n      this.setState({\n        previousDayData: filteredResults\n      })\n    }\n  }\n\n  inputHandler = (evt) => {\n    const searchData = this.state.data.filter(e => e[1].toLowerCase().includes(evt.target.value.toLowerCase()))\n    this.setState({ \n      input: evt.target.value,\n      filteredData: searchData \n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className='display-3'>COVID-19 cases by country</h1>\n        <h1 className='display-4'>{\"data fetched on \" + moment(new Date()).format(\"MMMM Do YYYY\")}</h1>\n\n        <Modal isOpen={this.state.showModal}\n          contentLabel=\"Details\"\n          onRequestClose={() => this.handleCloseModal()}\n          shouldCloseOnOverlayClick={true}\n          ariaHideApp={false}\n          className=\"Modal\">\n\n          <CountryDetails modalInfo={this.state.modalInfo} \n          handleCloseModal={()=>this.handleCloseModal()} \n          />\n\n        </Modal>\n\n        <input\n          type='textbox'\n          value={this.state.input}\n          onChange={e => this.inputHandler(e)}\n          placeholder='Search for country name'\n          className='form-control' />\n\n        <table className=\"table\">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th>Country</th>\n              <th>Infected</th>\n              <th>Deaths</th>\n              <th>Recovered</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.state.filteredData.map(row => (\n                <VirusDataTableRow\n                  key={row}\n                  rowData={row}\n                  handleOpenModal={() => this.handleOpenModal(row)}\n                  handleCloseModal={() => this.handleCloseModal()} />\n              ))\n            }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}","import React from 'react';\r\nimport './App.css';\r\nimport { VirusDataTableAreacomponent } from './VirusDataTableArea.component';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <VirusDataTableAreacomponent />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}